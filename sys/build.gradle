buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}

	repositories {
		maven {
//		    url "http://49.4.160.163:8093/nexus/content/groups/public/"
			url "http://10.133.255.240:8093/nexus/content/groups/public/"
		}
		mavenCentral()
	}

	dependencies {
		classpath "gradle.plugin.at.comm_unity.gradle.plugins:jpamodelgen-plugin:1.1.4"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "at.comm_unity.gradle.plugins.jpamodelgen"

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'src/metamodel/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
}

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Finchley.SR1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jpaModelgen {
	library = "org.hibernate:hibernate-jpamodelgen:4.3.8.Final"
	jpaModelgenSourcesDir = "src/metamodel/java"

}

dependencies {
	compile('com.alibaba:druid-spring-boot-starter:1.1.10')
	compile "com.alibaba:fastjson:1.2.38"
	compile('com.google.guava:guava:23.0')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')

	compile('org.apache.commons:commons-lang3:3.6')

	compile('io.jsonwebtoken:jjwt:0.7.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
//	runtime('com.oracle:ojdbc14:10.2')
	runtime('mysql:mysql-connector-java')
}
